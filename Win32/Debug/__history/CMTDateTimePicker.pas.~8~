unit CMTDateTimePicker;

interface

uses
  System.SysUtils, System.Classes, Vcl.Controls, Vcl.ComCtrls;

type
  TCMTDateTimePicker = class(TDateTimePicker)
  private
    FIsEmpty: Boolean;
    procedure SetIsEmpty(const Value: Boolean);
  protected
    procedure KeyDown(var Key: Word; Shift: TShiftState); override;
  public
    constructor Create(AOwner: TComponent); override;
    procedure Clear;
  published
    property IsEmpty: Boolean read FIsEmpty write SetIsEmpty;
    property Date;
    property Text;
  end;

procedure Register;

implementation

procedure Register;
begin
  RegisterComponents('CMT', [TCMTDateTimePicker]);
end;

constructor TCMTDateTimePicker.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FIsEmpty := True;
end;

procedure TCMTDateTimePicker.SetIsEmpty(const Value: Boolean);
begin
  if FIsEmpty <> Value then
  begin
    FIsEmpty := Value;
    if FIsEmpty then
    begin
      // Limpa a data interna e o texto, simulando o estado vazio
      inherited SetDate(0);
      Self.Text := '';
    end
    else
    begin
      // Garante que a data interna é atualizada quando o usuário seleciona uma
      if Date = 0 then
        Date := Now; // Define a data atual se não houver nenhuma
    end;
  end;
end;

procedure TCMTDateTimePicker.Clear;
begin
  IsEmpty := True;
end;

procedure TCMTDateTimePicker.KeyDown(var Key: Word; Shift: TShiftState);
begin
  // Intercepta a tecla Backspace
  if Key = VK_BACK then
  begin
    Clear;
    Key := 0; // Impede que o Delphi processe o evento novamente
  end
  else
    inherited KeyDown(Key, Shift);
end;

end.
